<?xml version="1.0" encoding="UTF-8" ?>
<Document corpusVersion="3" name="A26_F06_Fluid_Simulation_using_Laplacian_Eigenfunctions">
  
    ef3ac4290bf26f9f67842b53e7d808ff88f5c184028737549366539dc08f247e
    3xs1
    http://dx.doi.org/10.1145/2077341.2077351
  
  
    
      
        <article-title>Fluid Simulation using Laplacian Eigenfunctions</article-title>
      
      
        
          TYLER DE WITT
        
        
          CHRISTIAN LESSIG
        
        
          EUGENE FIUME University of Toronto
        
      
      
        <h2>Graphics]:</h2>
      
      <DRI_Outcome_Contribution ann2="DRI_Outcome_Contribution" agreement="2equal_1diff" ann1="DRI_Challenge_Goal" ann3="DRI_Outcome_Contribution">We present an algorithm for the simulation of incompressible fluid phenomena that is computationally efficient and leads to visually convincing simulations with far fewer degrees of freedom than existing approaches.</DRI_Outcome_Contribution> <DRI_Approach agreement="All_Equal">Rather than using an Eulerian grid or Lagrangian elements, we represent vorticity and velocity using a basis of global functions defined over the entire simulation domain.</DRI_Approach> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Challenge_Goal">We show that choosing Laplacian eigenfunctions for this basis provides benefits, including correspondence with spatial scales of vorticity and precise energy control at each scale.</DRI_Outcome> <DRI_Approach agreement="All_Equal">We perform Galerkin projection of the Navier-Stokes equations to derive a time evolution equation in the space of basis coefficients.</DRI_Approach> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome_Contribution">Our method admits closed form solutions on simple domains but can also be implemented efficiently on arbitrary meshes.</DRI_Outcome>
	
	<h2>Categories and Subject Descriptors:</h2> I.3.7 [Computer ThreeDimensional Graphics and Realism—Animation <h2>General Terms: </h2> Animation, Fluid Simulation <h2>Additional Key Words and Phrases: </h2>Laplacian eigenfunctions, physically based animation, fluid, smoke, geometric mechanics	   
    
    
      
        <h1>ACM</h1>
        
          <h2>Reference Format:</h2>
          <Sentence agreement="All_Equal">de Witt, T., Lessig, C., and Fiume, E. 2011.</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">Fluid Simulation using Laplacian Eigenfunctions.</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">ACM Trans.</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">Graph.</Sentence>
        
      
      
        <h1>1. INTRODUCTION</h1>
      
      <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">Fluid motion is naturally captivating.</DRI_Background> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">Over the years, it has piqued the imagination and curiosity of artists, mathematicians and scientists.</DRI_Background> <DRI_Background agreement="All_Equal">The fascination with fluid motion is exemplified by its long history in the computer graphics literature.</DRI_Background> <DRI_Background agreement="All_Equal">Early work focused on obtaining motion that is visually interesting and convincing.</DRI_Background> <DRI_Background agreement="All_Equal">More recent physically based techniques rely primarily on numerical approximation of the Navier-Stokes equations.</DRI_Background> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">Computer simulation of a model necessitates a finite representation of its spatial quantities.</DRI_Background> <Sentence agreement="All_Equal">In the past, many approaches for choosing a finite representation have been proposed including the use of Eulerian grids, La-
      Tyler de Witt acknowledges a NSERC-Canada grant.</Sentence> tyler@dgp.toronto.edu , lessig@dgp.toronto.edu , elf@dgp.toronto.edu Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies show this notice on the first page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701 USA, fax +1 (212) 869-0481, or permissions@acm.org . c YYYY ACM 0730-0301/YYYY/11-ARTXXX $10.00 DOI 10.1145/XXXXXXX.YYYYYYY http://doi.acm.org/10.1145/XXXXXXX.YYYYYYY
      
        
        Fig. 1.
      
      <DRI_Unspecified agreement="All_Equal">Examples of Laplacian eigenfunction velocity basis fields on various domains.</DRI_Unspecified> <DRI_Unspecified ann2="DRI_Unspecified" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">They are stationary solutions to the Navier-Stokes equations.</DRI_Unspecified> <DRI_Unspecified agreement="All_Equal">For simple domains Laplacian eigenfunctions have closed form expressions; for general meshes they are defined through eigendecomposition of a discrete operator.</DRI_Unspecified>
      <Sentence agreement="All_Equal">grangian fluid mass particles, vorticity primitives and model reduction.</Sentence> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">Grid-based techniques are the most common approach.</DRI_Background> <DRI_Challenge ann2="DRI_Challenge" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">However, they suffer from high computational complexity, due to the general requirement at each simulation step to solve a system of equations whose size is proportional to the number of grid elements in the domain.</DRI_Challenge> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">Lagrangian techniques, such as mass particles, removes the dependence on the simulation domain.</DRI_Background> <DRI_Challenge agreement="All_Equal">That said, the computation of pressure and other fluid quantities are expensive and approximations lead to noticeable violations of incompressibility.</DRI_Challenge> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">Vorticity primitives, including particles and filaments, are very effective at simulating smoke in inviscid media but have difficulties modelling diffusion and handling boundary conditions.</DRI_Background> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">Model reduction is a data-driven approach that exploits a precomputed set of example simulations to obtain a low dimensional representation for fluid motion.</DRI_Background> <DRI_Challenge ann2="DRI_Challenge" agreement="2equal_1diff" ann1="DRI_Challenge" ann3="DRI_Background">While this technique is very efficient at run-time, it suffers from significant costs for precomputation and storage, and is dependent on the performance of an existing simulator or other mechanism to obtain ground-truth data.</DRI_Challenge> <DRI_Challenge_Goal ann2="DRI_Outcome_Contribution" agreement="2equal_1diff" ann1="DRI_Challenge_Goal" ann3="DRI_Challenge_Goal">We propose an algorithm for the interactive simulation of fluid motion that avoids many of the shortcomings of existing techniques.</DRI_Challenge_Goal> <DRI_Approach agreement="All_Equal">We employ a representation of fluid velocity and vorticity in a finite dimensional basis of Laplacian eigenfunctions.</DRI_Approach> <DRI_Outcome ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome">The resulting velocity basis fields are divergence free and respect boundary conditions, so that these constraints are enforced automatically without the need for additional computation.</DRI_Outcome> <DRI_Approach agreement="All_Equal">Our algorithm can be formulated as Galerkin projection of the vorticity form of the Navier-Stokes equations onto Laplacian eigenfunctions defined over the simulation domain.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">The resulting finite dimensional form of the equations describes the time evolution of the basis coefficients.</DRI_Approach> <DRI_Approach agreement="All_Equal">We precompute the non-linear advection terms between pairs of basis functions and store the result as structure coefficients in a set of matrices.</DRI_Approach> <DRI_Approach agreement="All_Equal">Viscosity and external forces are incorporated using linear terms, and the basis function coefficients are hence updated using a simple matrix-vector equation.</DRI_Approach> <DRI_Approach agreement="All_Equal">Laplacian eigenfunctions form an orthogonal basis, allowing one to easily compute the energy of the fluid.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">Additionally, Laplacian eigenfunctions of increasing eigenvalue magnitude have a natural visual correspondence with decreasing scales of vorticity.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">Coupled with orthogonality, the correspondence allows precise control of a fluid’s turbulent spectrum through adjustment of basis coefficients.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">With Laplacian eigenfunctions the viscosity can be simulated accurately through a simple exponential decay of basis coefficients, but also allows arbitrary user-controlled or automatic adjustment of the spectrum to achieve a desired effect.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">For some practically important simulation domains such as a 2-D plane and 3-D rectangular cavity, Laplacian eigenfunctions have closed form expressions, allowing fully analytic simulation.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">In these cases, no mesh is required to store the fluid’s velocity.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">Instead, a velocity can be precisely evaluated at any spatial coordinate without the need for interpolation.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">Furthermore, closed form expressions allow symbolic evaluation of the precomputed advection operator, making this process fast and exact.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Approach">However, our method is not limited to these domains, and we present a formulation on structured and irregular meshes using discrete exterior calculus, in which velocity and vorticity basis fields are eigenvectors of a discrete Laplacian operator.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">Additionally, our method supports the interaction of immersed moving obstacles and buoyancy through projection of forces to the velocity basis fields.</DRI_Approach> <DRI_Outcome ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome">Our method allows considerable flexibility in choosing the basis dimensionality.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">Even simulations with few degrees of freedom provide visually convincing results, avoiding the artifacts common to very low-dimensional representations in Eulerian or Lagrangian simulations.</DRI_Outcome> <DRI_Outcome ann2="DRI_Approach" agreement="3diff" ann1="DRI_Outcome" ann3="DRI_Outcome_Contribution">In this respect, our method provides a principled means of dimensionality reduction of the Navier-Stokes fluid equations.</DRI_Outcome> <DRI_Outcome ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome">However, our method is not data-driven as seen in current model reduction techniques and hence avoids the need for an existing fluid simulator or pre-existing data.</DRI_Outcome> <DRI_Outcome_Contribution ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Outcome_Contribution">We believe our algorithm and choice of basis provides an exciting avenue and will be an important complement to the methods in the literature.</DRI_Outcome_Contribution>
      ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
      2
      •
      
        
        Fig. 2. A buoyant smoke simulation using a basis of 128 Laplacian eigenfunctions.
      
      
        <h1>2. RELATED WORK</h1>
        <DRI_Background agreement="All_Equal">Incompressible fluid dynamics is a vast subject.</DRI_Background> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Unspecified">We survey some relevant work from geometric mechanics, computational fluid dynamics (CFD) and the computer graphics literature.</DRI_Background>
        
          <h2>2.1 Geometric Mechanics</h2>
          <DRI_Background agreement="All_Equal">Euler’s equations describing the dynamics of a rotating rigid body date from the 18th century.</DRI_Background> <DRI_Background agreement="All_Equal">In 1901, Poincaré [1901] showed that by considering various group manifolds as the configuration space, Euler’s equation could apply generally to a class of physical systems.</DRI_Background> <DRI_Background agreement="All_Equal">For example, in the case of a rotating rigid body the group is the rotation group SO(3).</DRI_Background> <DRI_Background agreement="All_Equal">Arnold [1966] showed that an ideal incompressible fluid is described similarly as geodesic motion on SDiff, the Lie group of volume preserving diffeomorphisms.</DRI_Background> <DRI_Background agreement="All_Equal">The notion of structure coefficients to describe the interaction of Lie algebra basis elements of these groups is directly related to the precomputed coefficient matrices used in our method.</DRI_Background> <DRI_Background agreement="All_Equal">Many of these concepts are summarized by Marsden and Ratiu [1999].</DRI_Background> <DRI_Background agreement="All_Equal">Representing vorticity using Laplacian eigenfunctions dates back at least to Yudovich [1963], who used this method to prove existence and uniqueness theorems for the two dimensional NavierStokes equations.</DRI_Background> <DRI_Background agreement="All_Equal">More recently, Agrachev et al. [2005] used vorticity Laplacian eigenfunctions to prove theorems in the mathematical control literature.</DRI_Background> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">This paper was our inspiration for investigating a Laplacian eigenfunction representation of vorticity as a practical means of fluid simulation in computer graphics applications.</DRI_Approach>
        
        
          <h2>2.2 Computational Fluid Dynamics</h2>
          <DRI_Background agreement="All_Equal">In the 1950’s, Silberman presented a fluid simulation algorithm for the earth’s atmosphere in a basis of spherical harmonics, which are Laplacian eigenfunctions on the surface of a sphere [Silberman 1954].</DRI_Background> <DRI_Background agreement="All_Equal">This basis was applied to the vorticity stream function fluid equations in two dimensions, and the advection operator was evaluated symbolically.</DRI_Background> <DRI_Background agreement="All_Equal">This method has come to be known in the CFD literature as the interaction coefficient method.</DRI_Background> <DRI_Background agreement="All_Equal">Outside of atmospheric sciences, it is not widely used due to poor scaling for large basis dimensionality.</DRI_Background> <DRI_Background agreement="All_Equal">Such performance considerations were the motivation for the development of spectral methods as pioneered by Orszag [Orszag 1969].</DRI_Background> <DRI_Background agreement="All_Equal">Spectral methods are characterized by the use of a fast transform allowing efficient calculation of advection in the spatial domain, thereby avoiding convolution sums in the spectral domain.</DRI_Background> <DRI_Background agreement="All_Equal">They are often used to study homogeneous turbulence [Orszag and Patterson 1972; Rogallo et al. 1981].</DRI_Background> <DRI_Background agreement="All_Equal">Fourier series or Chebyshev polynomials are commonly employed, as spectral methods are limited to bases admitting a fast transform.</DRI_Background> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">Our method is most analogous to the interaction coefficient method of [Silberman 1954], although we consider arbitrary domains.</DRI_Approach> <DRI_Background agreement="All_Equal">On arbitrary domains, Laplacian eigenfunctions do not in general admit a fast transform and hence do not share the inherent theoretical performance of a spectral method.</DRI_Background> <DRI_Background agreement="All_Equal">However, Laplacian eigenfunctions have many other benefits as we describe in Section 3.</DRI_Background> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Approach">Furthermore, theoretical performance scaling is less critical for the applications we consider and we show that visually detailed simulations are attainable at low cost.</DRI_Background> <DRI_Background agreement="All_Equal">Divergence free finite element methods (DFFEM) employ bases of discrete divergence free velocity fields to solve fluid equations in a space that satisfies mass continuity a priori [Gustafson and Hartman 1983].</DRI_Background> <DRI_Approach agreement="All_Equal">Our method is similar in this respect.</DRI_Approach> <DRI_Background agreement="All_Equal">However, in contrast to DFFEM, for some simple domains Laplacian eigenfunctions do not require a discrete mesh.</DRI_Background> <DRI_Background agreement="All_Equal">Also, to our knowledge no basis employed in DFFEM exhibits all of the advantageous proper- ties of Laplacian eigenfunctions, including orthogonality, stationarity with respect to Navier-Stokes equations, global support, and correspondence with spatial scales of vorticity.</DRI_Background>
          ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
          •
          3
        
        
          <h2>2.3 Computer Graphics</h2>
          <DRI_Background agreement="All_Equal">Fluid simulation methods in the computer graphics literature belong to roughly four categories: grid-based, mass particles, vortex elements and model reduction.</DRI_Background> <DRI_Background agreement="All_Equal">Grid-based techniques for simulating the 3-D Navier-Stokes equations were introduced by Foster and Metaxas [1996] but were unstable due to the use of explicit integrators.</DRI_Background> <DRI_Background agreement="All_Equal">Stam developed an unconditionally stable integration scheme using semi-Lagrangian advection and an implicit integrator [Stam 1999].</DRI_Background> <DRI_Background agreement="All_Equal">However, the result produces artificial viscosity which dampens vortices prematurely, and requires an iterative linear solver to solve for a pressure field to enforce incompressibility.</DRI_Background> <DRI_Background agreement="All_Equal">Works aimed at mitigating or minimizing artificial diffusion include vorticity confinement [Fedkiw et al. 2001] and high order advection schemes [Selle et al. 2008].</DRI_Background> <DRI_Background agreement="All_Equal">To improve the performance of the iterative pressure solver, use of adaptive grids [Losasso et al. 2004] and hierarchical coarse grids for projection [Lentine et al. 2010] have been proposed.</DRI_Background> <DRI_Background agreement="All_Equal">Stam [2002] used the 2-D Fourier transform of a velocity field to perform fast pressure projection, but this method is limited to simple domains and boundary conditions, and still dissipates energy.</DRI_Background> <DRI_Background agreement="All_Equal">Bridson presented a simple means to generate procedural divergence free flows through the curl of a vector potential stream function [Bridson et al. 2007] but this work did not address physical dynamics.</DRI_Background> <DRI_Background agreement="All_Equal">Elcott presented a method that preserves circulation on simplicial meshes, but does not preserve energy [Elcott et al. 2007].</DRI_Background> <DRI_Background agreement="All_Equal">Mullen et al. developed a fluid integrator capable of perfect energy preservation or desired viscosity independent of grid-resolution [Mullen et al. 2009], but this method is complex and requires a solution to a non-linear system at each timestep.</DRI_Background> <DRI_Background agreement="All_Equal">Hybrid particle-grid methods such as FLIP [Zhu and Bridson 2005] are effective in eliminating numerical diffusion, but still require a grid to enforce incompressibility.</DRI_Background> <DRI_Background agreement="All_Equal">Common to all these stable grid-based techniques previously mentioned is the need to solve a system of equations at each time integration step, the size of which is proportional to the number of grid elements.</DRI_Background> <DRI_Approach ann2="DRI_Background" agreement="3diff" ann1="DRI_Approach" ann3="DRI_Outcome">In contrast, the performance of our method is independent of the domain or grid resolution.</DRI_Approach> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">In fact, for typical domains such as a 2-D rectangle or 3-D rectangular cavity, the global basis functions we employ have closed form expressions, removing the need for a velocity grid representation entirely.</DRI_Approach> <DRI_Approach agreement="All_Equal">Our method allows controllable viscosity, and supports general domains through a formulation on discrete meshes.</DRI_Approach> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Approach">Particle methods track a fluid’s mass through Lagrangian elements.</DRI_Background> <DRI_Background agreement="All_Equal">Smoothed particle hydrodynamics (SPH) was introduced to graphics by Desbrun and Gascuel [1996] and used subsequently to simulate water [Müller et al. 2003; Adams et al. 2007].</DRI_Background> <DRI_Background agreement="All_Equal">Enforcing incompressibility in SPH methods is computationally expensive, making them impractical for a large number of particles.</DRI_Background> <DRI_Approach agreement="All_Equal">Our method satisfies incompressibility automatically as it operates directly in a space of divergence free fields.</DRI_Approach> <DRI_Background agreement="All_Equal">Vortex methods use Lagrangian elements such as particles or filaments to track vorticity, and advect these elements through the fluid’s velocity [Gamito et al. 1995; Park and Kim 2005; Angelidis et al. 2006; Weißmann and Pinkall 2010].</DRI_Background> <DRI_Background agreement="All_Equal">A formulation using vorticity guarantees incompressibility, but the reconstruction of the velocity field is computationally expensive, typically involving the Biot-Savart formula.</DRI_Background> <DRI_Approach agreement="All_Equal">We also use a vorticity formulation, hence requiring no explicit enforcement of the incompressibility constraint.</DRI_Approach> <DRI_Approach agreement="All_Equal">However, we use a superposition of global basis functions allowing the representation of arbitrary vorticity fields, whereas Lagrangian elements are limited to vorticity concentrated at points or on curves.</DRI_Approach> <DRI_Approach agreement="All_Equal">Additionally, choosing Laplacian eigenfunctions as a basis allows the velocity field to be recovered trivially, removing the need for complicated and expensive reconstruction.</DRI_Approach> <DRI_Background agreement="All_Equal">Gupta and Narasimhan represented fluid velocity in a basis of Legendre polynomials allowing analytic evaluation of differential operators [Gupta and Narasimhan 2007].</DRI_Background> <DRI_Background agreement="All_Equal">However, only boxboundary conditions were considered and the velocity basis fields are not strictly divergence free hence requiring a pressure projection step to enforce incompressibility.</DRI_Background> <DRI_Background agreement="All_Equal">Model reduction has been applied to fluid simulation by Treuille et al. [2006].</DRI_Background> <DRI_Background agreement="All_Equal">This technique chooses a reduced velocity basis defined on a mesh through observation of an existing fluid simulator.</DRI_Background> <DRI_Background agreement="All_Equal">The resulting run-time performance is fast, but the precomputation time and memory requirements are large.</DRI_Background> <DRI_Background agreement="All_Equal">Furthermore, it is unclear how well this technique generalizes to arbitrary flows, as behavior is limited to the examples present in training.</DRI_Background> <DRI_Approach agreement="All_Equal">Our method can be used directly as a means of dimensionality reduction through choice of the basis dimension N , but it differs from current approaches in many respects.</DRI_Approach> <DRI_Approach agreement="All_Equal">We choose an appropriate velocity basis a priori instead of relying on observation of an existing fluid simulator.</DRI_Approach> <DRI_Background agreement="All_Equal">Up to a desired scale of vorticity, Laplacian eigenfunctions form a complete basis for divergence free fields.</DRI_Background> <DRI_Background agreement="All_Equal">Adding basis functions increases the coverage in a well defined way.</DRI_Background> <DRI_Background agreement="All_Equal">In contrast, a data driven basis can only approximate flows that are in some sense “close” to those observed in training, and there is no guarantee that additional training data will substantially increase the span of the resulting PCA basis.</DRI_Background> <DRI_Approach agreement="All_Equal">Our basis has a natural correspondence with spatial scales of vorticity that is lacking in [Treuille et al. 2006].</DRI_Approach> <DRI_Background agreement="All_Equal">Finally, Laplacian eigenfunctions have closed form expressions for some simple domains, in which case the precomputation time and memory requirements are vastly reduced in comparison.</DRI_Background>
          Symbol Description N Basis dimension. {Φ k } Set of velocity basis fields. {φ k } Set of vorticity basis fields. u Fluid velocity vector field. ω Fluid vorticity vector field. ω 1 , ω 2 , . . . , ω N Basis coefficients. w = [ω 1 ω 2 . . . ω N ] T Column vector of basis coefficients. ∆ Vector Laplacian operator. λ k Scalar eigenvalue of k th basis field. Adv(·, ·) Advection operator. {C k } Structure coefficient matrices. C k [i, j] (i, j) th entry of the C k matrix. a x , a y , a z Canonical basis for R 3 .
          
            Fig. 3. Nomenclature.
          
        
      
      
        <h1>3. LAPLACIAN EIGENFUNCTIONS AS BASIS FIELDS</h1>
        <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="Sentence">We express the velocity field of a fluid u on a domain D as
        N u = ω i Φ i .</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="Sentence">i where Φ k are eigenfunctions of the vector Laplacian ∆ = grad (div ) − curl 2 .</Sentence> <DRI_Approach agreement="All_Equal">When acting on divergence free fields, the vector Laplacian reduces to ∆ = −curl 2 .</DRI_Approach> <Sentence agreement="All_Equal">We require the set of basis</Sentence>
        ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
        4
        •
        ..
        
          
          
          Fig. 4.
        
        <DRI_Unspecified ann2="DRI_Unspecified" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">Laplacian eigenfunctions have a correspondence with spatial scales of vorticity, allowing basis coefficients to be interpreted as a discrete spectrum of vorticity.</DRI_Unspecified> <DRI_Unspecified ann2="DRI_Unspecified" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">The right of the spectrum corresponds to larger magnitudes of eigenvalues and smaller scale vortices.</DRI_Unspecified>
        <Sentence agreement="All_Equal">fields Φ k to be divergence free and satisfy a free slip condition at the boundary.</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="Sentence">Hence our basis fields are completely characterized by ∆Φ k = λ k Φ k</Sentence>
        
          1
          div (Φ k ) = 0 Φ k · n = 0 at ∂D
        
        <Sentence agreement="All_Equal">where λ k are eigenvalues and n is a vector normal to the boundary.</Sentence> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">The eigenfunctions of the Laplacian operator ∆ are domain dependent.</DRI_Approach> <Sentence agreement="All_Equal">For many simple domains, functions satisfying Eq.</Sentence> <Sentence agreement="All_Equal">1 have closed form expressions, which are available for example in the physics literature where they describe the magnetic fields of electromagnetic resonators [Cheng 1999].</Sentence> <Sentence agreement="All_Equal">For instance, on a π × π square domain, Laplacian eigenfunctions satisfying Eq.</Sentence> <Sentence agreement="All_Equal">1 have the closed form expressions 1 Φ k = k 1 2 + k 2 2 (k 2 sin(k 1 x) cos(k 2 y)a x</Sentence>
        
          2
          −k
        
        
          2
          1 cos(k 1 x) sin(k 2 y)a y ) ,
        
        <Sentence agreement="All_Equal">where k = (k 1 , k 2 ) ∈ Z 2 is a tuple of integers known as the vector wave number.</Sentence> <DRI_Approach agreement="All_Equal">The vector fields Φ k are Laplacian eigenfunctions with eigenvalues λ k = −(k 1 2 + k 2 2 ).</DRI_Approach> <DRI_Unspecified ann2="DRI_Unspecified" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Unspecified">Examples are plotted in Figure 4 .</DRI_Unspecified> <DRI_Approach agreement="All_Equal">We will continue to use the square domain as a concrete, illustrative example throughout the text, although closed form expressions also exist for many other domains including a 3-D rectangular prism [de Witt 2010], a disc, the surface of a sphere, or a planar region with a wrap around boundary condition.</DRI_Approach> <DRI_Approach agreement="All_Equal">For our simulation method, we also require the vorticity field ω = curl (u) and a vorticity basis {φ k } with φ k = curl Φ k .</DRI_Approach> <Sentence agreement="All_Equal">For example, the vorticity basis fields associated with Eq.</Sentence> <Sentence agreement="All_Equal">2 are just the curl of the velocity basis functions and given by</Sentence>
        
          3
          φ k = sin(k 1 x) sin(k 2 y)a z .
        
        <DRI_Approach agreement="All_Equal">One can verify that the φ k are also Laplacian eigenfunctions of the domain.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="Sentence">However, as u and ω are orthogonal, the vorticity basis functions have only a normal component at the boundary, and hence satisfy ∆φ k = λ k φ k</DRI_Approach>
        
          4
          φ k × n = 0 at ∂D.
        
        
          <h2>3.1 Basis Field Properties</h2>
          <DRI_Approach agreement="All_Equal">We summarize some additional interesting and useful properties of our basis.</DRI_Approach> <Sentence agreement="All_Equal">One can verify that the example expressions of Eqs.</Sentence> <Sentence agreement="All_Equal">2 and 3 satisfy all the properties listed below.</Sentence> <DRI_Unspecified agreement="All_Equal">Velocity-Vorticity Duality.</DRI_Unspecified> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Challenge">In general, reconstructing a velocity field from a vorticity field is computationally expensive, typically involving the use of the Biot-Savart Law [Angelidis et al. 2006; Weißmann and Pinkall 2010].</DRI_Background> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="Sentence">The key benefit of a representation in
          Laplacian eigenfunctions is that the inverse operator curl −1 applied to vorticity basis functions yields a simple expression: Φ k = curl −1 φ k = curl −1 1 ∆φ k λ k = 1 curl −1 −curl 2 φ k λ k</Sentence>
          
            5
            1 = − curl φ k . λ k
          
          <DRI_Approach ann2="Sentence" agreement="3diff" ann1="DRI_Approach" ann3="DRI_Outcome">A further important observation is that due to linearity of the curl operator, the expansion of the vorticity ω in the φ i basis shares the same coefficients as the expansion of the velocity u in the Φ k basis
          N N N ω = curl u = curl ω i Φ i = ω i curl Φ i = ω i φ i .</DRI_Approach> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">i i i
          This is notable since a single coefficient vector w = [ω 1 ω 2 . . . ω N ] uniquely identifies both the fluid’s velocity u and its vorticity ω.</DRI_Approach> <DRI_Approach agreement="All_Equal">Either field can be easily reconstructed from the basis coefficients ω i .</DRI_Approach> <DRI_Unspecified agreement="All_Equal">Orthogonality.</DRI_Unspecified> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">Laplacian eigenfunctions on a domain form an orthogonal set.</DRI_Approach> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">The total energy of a signal expressed in an orthogonal basis is the sum of the squares of its coefficients by Parseval’s identity.</DRI_Approach> <Sentence ann2="DRI_Background" agreement="3diff" ann1="Sentence" ann3="DRI_Approach">The fluid’s kinetic energy can thus be calculated as Spatial scales of vorticity.</Sentence> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Unspecified">As shown in Figure 4 , larger eigenvalues of the Laplacian correspond to fields with smaller vortices.</DRI_Approach> <DRI_Approach agreement="All_Equal">Basis coefficients can be interpreted as a discrete spatial spectrum of the fluid with higher “frequencies” corresponding to smaller scales of vorticity.</DRI_Approach> <DRI_Background agreement="All_Equal">This notion has been previously applied by Stam and Fiume using a Fourier basis to generate procedural stochastic turbulence [Stam and Fiume 1993].</DRI_Background> <DRI_Approach agreement="All_Equal">A decomposition into a spectrum of vorticity is important for at least two reasons.</DRI_Approach> <DRI_Approach agreement="All_Equal">First, because computations require our basis to be finite, this ordered structure provides a principle by which to select the finite set.</DRI_Approach> <DRI_Approach agreement="All_Equal">In choosing to truncate the spectrum at some finite N , the error we incur is well defined: we lose the ability to simulate vortices smaller than a given scale.</DRI_Approach> <DRI_Approach agreement="All_Equal">Second, combined with orthogonality, our basis delivers a means of controlling the energy at different scales of vorticity by adjusting the magnitude of the basis coefficients.</DRI_Approach> <DRI_Approach agreement="All_Equal">We use this property in Section 4 to accurately model viscous energy decay.</DRI_Approach> <DRI_Approach agreement="All_Equal">It could also be used to initialize or arbitrarily change a fluid’s turbulent spectrum.</DRI_Approach> <DRI_Unspecified agreement="All_Equal">Closed form expressions.</DRI_Unspecified> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">For some simple domains, the basis fields have closed form expressions.</DRI_Approach> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">This allows the velocity to be evaluated at any spatial coordinate without the need for a voxelized grid or interpolation.</DRI_Approach> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">A grid may still be used for visualization, for example to track density or subsample the velocity from the closed form expressions to accelerate particle advection.</DRI_Approach> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">However, this grid is independent of the simulation, and its resolution may be changed without changing the performance or behavior of the underling simulation.</DRI_Approach> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">Although the benefits of closed form expressions are limited to simple geometries, a 2-D rectangle and 3D rectangular cavity both represent typical simulation domains.</DRI_Approach> <DRI_Unspecified ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="DRI_Unspecified">In Section 8 we compute basis fields numerically for general meshed domains through a discrete vector Laplacian operator.</DRI_Unspecified>
          N u 2 = ω i 2 . D i
          ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
          •
          5
          
            Fig. 5. A fluid’s motion is a curve through the Euclidean space of basis coefficients, shown for N = 3 as an illustrative example. From the NavierStokes equations, we derive an expression for the tangent vector w  ̇ as a function of the current state vector.
          
        
      
      
        <h1>4. DYNAMICS</h1>
        <DRI_Background agreement="All_Equal">A fluid’s velocity field will change continuously over time according to physical laws.</DRI_Background> <DRI_Approach agreement="All_Equal">In our basis representation, this can be described by the continuous change of the coefficient vector w.</DRI_Approach> <DRI_Unspecified ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="DRI_Unspecified">In this section we derive an expression for the time derivative w  ̇ in terms of the basis coefficients only.</DRI_Unspecified> <Sentence agreement="All_Equal">The vorticity formulation of the Navier-Stokes equation is</Sentence>
        
          6
          ω  ̇ = Adv(u, ω) + ν∆ω + curl (f )
        
        <Sentence agreement="All_Equal">where ω = curl u and f are external forces.</Sentence> <DRI_Approach agreement="All_Equal">For notational convenience, we choose Adv(·, ·) to represent the advection term, which is defined as Adv(u, ω) := curl (ω × u).</DRI_Approach> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="Sentence">We perform Galerkin projection of the Navier-Stokes equations onto a Laplacian eigenfunction basis by substituting the expansions ω = i ω i φ i , u = j ω j Φ j and ω  ̇ = k ω  ̇ k φ k into Eq.</Sentence> <Sentence agreement="All_Equal">6 and rearranging terms through linearity of operators N N N ω  ̇ k φ k = ω i ω j Adv(Φ i , φ j ) + ν ∆ω i φ i + curl (f ).</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="Sentence">k i j i We discuss each right hand term separately.</Sentence> <DRI_Unspecified agreement="All_Equal">Advection.</DRI_Unspecified> <DRI_Approach agreement="All_Equal">The Adv(Φ i , φ j ) terms represent the nonlinear advection of basis fields.</DRI_Approach> <DRI_Approach agreement="All_Equal">As will be detailed in Section 6, we precompute these terms and the vorticity basis coefficients of the result are stored in a set of matrices C k .</DRI_Approach> <Sentence agreement="All_Equal">After equating coefficients, the contribution of the self advection term can be written as N N</Sentence>
        
          7
          ω  ̇ k = ω i ω j C k [i, j], i j
        
        <Sentence agreement="All_Equal">summarized in matrix form as ω  ̇ k = w T C k w, where C k are precomputed matrices and w is the column vector of basis coefficients [ω 1 ω 2 . . . ω N ] T .</Sentence> <DRI_Unspecified agreement="All_Equal">Viscosity.</DRI_Unspecified> <DRI_Approach agreement="All_Equal">Because φ k are Laplacian eigenfunctions, the viscous term becomes ν i ∆ω k φ k = ν k λ k ω k φ k .</DRI_Approach> <DRI_Approach agreement="All_Equal">The effect of viscosity on each basis coefficient is hence described by the linear first order differential equation ω  ̇ k = νλ k ω k which conveniently has the closed form solution ω  ̇ k (t) = ω k (0)e νλ k t .</DRI_Approach> <DRI_Approach agreement="All_Equal">This says that the magnitude of each basis coefficient decays with a time constant equal to the eigenvalue, which is physically correct, as small vortices dissipate faster than large vortices.</DRI_Approach> <DRI_Unspecified agreement="All_Equal">External forces.</DRI_Unspecified> <Sentence agreement="All_Equal">External forces can be incorporated by projecting curl (f ) on the vorticity basis, to obtain coefficients f i =</Sentence>
        
          Fig. 6.
        
        <DRI_Unspecified ann2="DRI_Unspecified" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">A basis of Laplacian eigenfunctions is orthogonal, hence surfaces of constant energy are spheres in coefficient space.</DRI_Unspecified> <DRI_Unspecified ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="DRI_Unspecified">Left: Unconstrained explicit timesteps are subsequently projected to the manifold of constant energy by normalizing the position vector.</DRI_Unspecified> <DRI_Unspecified ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="DRI_Unspecified">Right: Although more expensive, it is also possible to derive an N -dimensional rotation matrix that constrains integration exactly to the state manifold.</DRI_Unspecified>
        <Sentence agreement="All_Equal">N curl (f ), φ i satisfying curl (f ) = i f i φ i .</Sentence> <Sentence agreement="All_Equal">Due to Eq.</Sentence> <Sentence agreement="All_Equal">5, f i can be equivalently obtained by directly projecting f to the velocity basis basis f i = f , Φ i , which often involves less computation.</Sentence> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">The contribution to ω  ̇ k is then ω  ̇ k = f k .</DRI_Approach> <DRI_Unspecified ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="DRI_Unspecified">Time Evolution Equation.</DRI_Unspecified> <Sentence agreement="All_Equal">In total, the time derivative of each basis coefficient is</Sentence>
        
          8
          ω  ̇ k = w T C k w + νλ k ω k + f k .
        
      
      
        <h1>5. TIME INTEGRATION</h1>
        <Sentence agreement="All_Equal">Any standard numerical integration scheme can be applied to integrate Eq.</Sentence> <Sentence agreement="All_Equal">8 forward in time.</Sentence> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Approach">However, for computer graphics applications speed and energy stability are important requirements.</DRI_Background> <DRI_Approach agreement="All_Equal">We first describe our preferred integration scheme that meets these two requirements, and then discuss other available techniques.</DRI_Approach> <DRI_Approach agreement="All_Equal">Our basis is orthogonal allowing kinetic energy to be calculated as a sum of squared coefficients.</DRI_Approach> <DRI_Approach agreement="All_Equal">Additionally, orthogonality implies that surfaces of constant energy in the Euclidean space of coefficients are spheres.</DRI_Approach> <DRI_Approach agreement="All_Equal">An inviscid fluid preserves kinetic energy, and should trace out a path on such a sphere.</DRI_Approach> <DRI_Approach agreement="All_Equal">We choose a fast explicit integrator (such as forward Euler or Runge-Kutta method) to first perform an unconstrained timestep, followed by renormalization to enforce the energy constraint as depicted in Figure 6 .</DRI_Approach> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">Renormalizing to preserve the kinetic energy is a technique available in any fluid simulation method and is not particular to our approach.</DRI_Background> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">However, when employing grid based velocity fields it is often undesirable as it can lead to visual artifacts.</DRI_Background> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Outcome">We have not observed such artifacts, possibly because our basis fields are globally supported and energy is never dissipated locally through a pressure projection step as for example in [Stam 1999].</DRI_Approach> <DRI_Approach agreement="All_Equal">The effect of viscosity and projected forces will change the kinetic energy, so these terms are integrated following the energy renormalization.</DRI_Approach> <DRI_Approach agreement="All_Equal">Physical viscosity is achieved by decaying each coefficient exponentially as described in Section 4.</DRI_Approach> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="Sentence">Our integration scheme is summarized in the pseudo-code of Alg.</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">1.</Sentence> <DRI_Unspecified agreement="All_Equal">Run time complexity.</DRI_Unspecified> <DRI_Approach agreement="All_Equal">Computation is dominated by the evaluation of matrix vector products, making the run time complexity O(z), where z is the total number of non-zero entries in all the {C k } combined.</DRI_Approach> <DRI_Approach agreement="All_Equal">In general, {C k } are dense and z is O(N 3 ), leading to a computational complexity similar to that of [Treuille et al. 2006].</DRI_Approach> <Sentence agreement="All_Equal">However, for some domains where closed form expressions are available including a 2-D rectangle and 3-D cavity, the regular-</Sentence>
        ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
        6
       <Sentence agreement="All_Equal"> </Sentence>•
        e 1 = N i w[i] 2 // Store kinetic energy of velocity field for k = 1 to N do w[k]  ̇ = w T C k w // Matrix vector product w += w∆t  ̇ // Explicit Euler integration e 2 = N i w[i] 2 // Calculate energy after time step w *= e 1 /e 2 // Renormalize energy for k = 1 to N do w[k] *= exp(λ k ∆t) // Dissipate energy for viscosity w[k] += f [k] // External forces Algorithm 1: Pseudo-code for our fluid simulator. <DRI_Unspecified ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="DRI_Unspecified">Time integration is explicit and does not require the solution to a linear system.</DRI_Unspecified>
        <Sentence agreement="All_Equal">ity of the boundary leads to very sparse {C k } matrices making the theoretical complexity O(N 2 ) and effectively ≈ O(N ) for practical ranges of N .</Sentence> <DRI_Unspecified agreement="All_Equal">Additional Integration Schemes.</DRI_Unspecified> <Sentence agreement="All_Equal">Eq.</Sentence> <Sentence agreement="All_Equal">8 is a symbolic expression for the first time derivative of vorticity.</Sentence> <DRI_Approach agreement="All_Equal">Differentiating this expression produces closed form expressions for time derivatives of arbitrary order.</DRI_Approach> <DRI_Approach agreement="All_Equal">These can be useful for alternate integration schemes to improve accuracy or allow time reversibility.</DRI_Approach> <DRI_Approach agreement="All_Equal">However, considering that stability has already been enforced it may not be a concern for graphics applications.</DRI_Approach> <DRI_Approach agreement="All_Equal">Greater accuracy could also be easily achieved through high order explicit schemes using a small timestep.</DRI_Approach> <DRI_Approach agreement="All_Equal">A final integration scheme that is theoretically interesting involves the calculation of an N dimensional rotation matrix R, which, when applied to the coefficient vector w, constrains its motion exactly to the constant energy N -sphere.</DRI_Approach> <DRI_Approach agreement="All_Equal">This approximates the true geodesic motion of the Euler fluid equations near the current state.</DRI_Approach> <DRI_Approach agreement="All_Equal">The position vector ω and the tangent vector ω  ̇ span an N −1 dimensional rotation plane that uniquely identifies an N ×N skew symmetric matrix ξ.</DRI_Approach> <DRI_Approach agreement="All_Equal">This matrix g is an element of so(N ), the Lie algebra of the N -dimensional rotation group SO(N ).</DRI_Approach> <DRI_Approach agreement="All_Equal">Multiplying by ∆t and exponentiating the matrix yields the N × N rotation matrix R = exp(∆tξ).</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Outcome">This method is more expensive than explicit integration with renormalization, and we have found that in comparison it offers very little gain in accuracy for small timesteps.</DRI_Approach> <DRI_Approach agreement="All_Equal">However, it is of interest because it preserves the geometric viewpoint of a fluid as a high dimensional rotation group, and provides a more rigorous way of enforcing energy preservation compared to the renormalization correction step.</DRI_Approach>
      
      
        <h1>6. PRECOMPUTATION OF ADVECTION OPERATOR</h1>
        <DRI_Approach agreement="All_Equal">The operator Adv(u, ω) := curl (ω × u) represents the advection of a fluid’s vorticity by its velocity field.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">It has many equivalent expressions, including the the Lie derivative L u ω, or the JacobiLie bracket of vector fields −[u, ω], Adv(Φ i , φ j ) := L Φ i φ j = −[Φ i , φ j ] = curl (φ j × Φ i ).</DRI_Approach> <DRI_Approach agreement="All_Equal">In our context, all the preceding expressions are equivalent, and any can be used to evaluate the advection of pairs of basis fields.</DRI_Approach> <Sentence agreement="All_Equal">For domains admitting closed form expressions for Laplacian eigenfunctions, the evaluation can be performed symbolically and is hence
        for i, j = 1 to N do p = Adv(φ i , Φ j ) // Project the result onto finite basis for k = 1 to N do C k [i, j] = Proj(p, φ k ) Algorithm 2: Pseudocode for precomputing entries of C k matrices.</Sentence>
        <Sentence agreement="All_Equal">exact.</Sentence> <DRI_Approach agreement="All_Equal">For discrete domains, it can be approximated numerically on a mesh as described in Section 8.</DRI_Approach> <DRI_Approach agreement="All_Equal">For every pair of basis functions we evaluate the advection operator and express the result in the finite φ k basis.</DRI_Approach> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">The basis coefficients of this projection are the structure coefficients that form the {C k } matrices and satisfy Adv(Φ i , φ j ) = C k [i, j]φ k .</DRI_Approach> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">k The Laplacian eigenfunction basis is closed under the Jacobi-Lie bracket.</DRI_Approach> <DRI_Approach agreement="All_Equal">Hence, we expect the result to factor perfectly into a linear combination of vorticity basis functions.</DRI_Approach> <DRI_Approach agreement="All_Equal">For simulation, our basis must necessarily be finite dimensional.</DRI_Approach> <DRI_Approach agreement="All_Equal">Despite closure, the advection operator may produce coefficients beyond the chosen finite bandlimit N which cannot be stored.</DRI_Approach> <DRI_Approach agreement="All_Equal">This is unavoidable, as the nonlinear advection operator necessitates products of functions.</DRI_Approach> <DRI_Approach agreement="All_Equal">Considering for example the Fourier basis, the multiplication of two N bandlimited functions is in general bandlimited by 2N .</DRI_Approach> <DRI_Approach agreement="All_Equal">Physically this represents the cascading of energy to ever higher scales of turbulence.</DRI_Approach> <DRI_Approach agreement="All_Equal">Projecting the result of the advection operator to our finite dimensional basis amounts to truncating the coefficients beyond the bandlimit N .</DRI_Approach> <DRI_Approach agreement="All_Equal">However, this truncation is physically motivated, since in a real fluid the vortices will eventually reach a small enough scale and dissipate quickly through viscosity.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Unspecified">A pseudo-code listing of the precomputation procedure is shown in Algorithm 2.</DRI_Approach> <DRI_Unspecified agreement="All_Equal">Properties of C k matrices.</DRI_Unspecified> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">Because the Jacobi-Lie bracket and vector cross product are anti-symmetric operators, the structure coefficient matrices have the property 1 1 C k [i, j] = − C k [j, i].</DRI_Approach> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">λ i λ j The antisymmetry reflects an important property of the our basis functions.</DRI_Approach> <DRI_Approach agreement="All_Equal">The self advection Adv(Φ k , φ k ) of a vorticity basis field φ k by its velocity Φ k is identically zero, and hence u  ̇ = 0, meaning that each velocity basis field is a stationary flow.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Approach">This is analogous to the stable rotation of a rigid body about a principal axis [Arnold 1966].</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Unspecified">To illustrate the preceding discussion, the evaluation of the structure coefficients in closed form for a 2-D rectangle is provided in Appendix A as an example.</DRI_Approach>
      
      
        <h1>7. EXTERNAL FORCES</h1>
        <DRI_Approach agreement="All_Equal">As discussed in Section 4, external forces can be incorporated by projecting f to the velocity basis basis f i = f , Φ i .</DRI_Approach> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">The inner product for vector valued f and Φ i is defined by the summation of dot product of vectors at every point x within the domain f , Φ i = f (x) · Φ i (x).</DRI_Approach> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">x We make use of external forces to allow immersed moving obstacles and to incorporate a simple buoyancy model.</DRI_Approach>
        ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
        •
        7
        
          <h2>7.1 Moving Obstacles</h2>
          <DRI_Approach agreement="All_Equal">The eigenfunctions of the Laplacian operator are defined by their domain and boundary conditions, making the velocity and vorticity basis fields domain dependent.</DRI_Approach> <DRI_Approach agreement="All_Equal">Static irregular boundaries and obstacles are supported in our method through precomputation on general meshes as will be discussed in Section 8.</DRI_Approach> <DRI_Approach agreement="All_Equal">However, moving obstacles change the shape and boundary conditions of the domain dynamically, and hence require special consideration.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Challenge_Goal">Our goal is to satisfy the internal boundary conditions of immersed objects at all times.</DRI_Approach> <DRI_Approach agreement="All_Equal">This requirement can be simply stated: in addition to remaining divergence free, the fluid velocity at an object’s boundary should be equal to the normal component of the boundary’s velocity.</DRI_Approach> <DRI_Approach agreement="All_Equal">This satisfies the free-slip condition when the object is at rest, and equates normal components of the fluid and boundary velocity when the object is in motion.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Unspecified">Our solution is as follows.</DRI_Approach> <DRI_Approach agreement="All_Equal">At each time-step we project the difference from the desired normal component onto the velocity basis Φ k and subtract the result from the current state vector w.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Outcome">The result is a divergence free field that best satisfies the desired boundary conditions.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">Note that this method is not perfect, as the projected forces only approximate the desired forces to the extent that the basis fields can resolve them.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Approach">In other words, to handle obstacles with small spatial features, one must increase N to use basis functions of a sufficiently high spatial frequency.</DRI_Approach> <DRI_Outcome ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome">However, for coarse objects, we have found this method to provide reasonable accuracy, and it is efficient enough to perform interactively without requiring precomputation.</DRI_Outcome> <DRI_Background agreement="All_Equal">Treuille et al. [2006] also correct the normal velocity component through projection to a divergence free field, and our technique is similar in this respect.</DRI_Background> <DRI_Background agreement="All_Equal">However, in their case an additional set of fields they name the boundary basis are employed that are chosen based on the object’s geometry to best correct for normal velocity components.</DRI_Background> <DRI_Background ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Background">The boundary basis allows the free-slip constraint to be more accurately enforced in the vicinity of the boundary, but adds substantially to memory and precomputation expense.</DRI_Background> <DRI_Background ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Background">It also does nothing to improve the quality of object-fluid interaction since the underlying simulation basis, to which the boundary basis must be numerically projected, remains unchanged.</DRI_Background> <DRI_Approach agreement="All_Equal">In contrast, our basis fields exhibit a spectrum of spatial scales (akin to a Fourier Series) allowing some guarantee of resolving obstacle features with similar length scales.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">Although our method does not perfectly resolve the boundary, it avoids the use of multiple bases for simulation and boundaries as well as the associated expensive precomputation and memory requirements.</DRI_Approach>
          
            
            Fig. 7.
          
          <DRI_Unspecified ann2="DRI_Unspecified" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified">Irregular obstacles interact with the fluid simulation by projecting contact forces to the velocity basis to best satisfy boundary conditions.</DRI_Unspecified>
          
            
            Fig. 8. Velocity basis fields for a tetrahedral mesh obtained through eigendecomposition of a discrete Laplacian operator.
          
        
        
          <h2>7.2 Buoyancy</h2>
          <DRI_Approach agreement="All_Equal">In some of our examples we incorporate a simple buoyancy model.</DRI_Approach> <DRI_Approach agreement="All_Equal">Smoke density or particle density are subsampled onto a grid.</DRI_Approach> <DRI_Approach agreement="All_Equal">Buoyancy forces at each grid centre are calculated through the Boussinesq approximation.</DRI_Approach> <DRI_Approach agreement="All_Equal">These forces are projected to the velocity basis through pointwise multiplication.</DRI_Approach>
        
      
      
        <h1>8. FORMULATION ON MESHED DOMAINS</h1>
        <DRI_Background agreement="All_Equal">Simple geometries admit basis fields with closed form expressions.</DRI_Background> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">However, our method also supports discrete domains defined on a mesh.</DRI_Approach> <DRI_Approach agreement="All_Equal">For this, we require a set of basis fields defined on the mesh that are eigenfunctions of a discrete Laplacian operator, as well as a means to precompute their advection numerically.</DRI_Approach> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Approach">Discrete exterior calculus (DEC) provides a principled means of describing operators and quantities on simplicial meshes [Desbrun et al. 2005].</DRI_Background> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Background">It has been applied to fluid simulation in previous work, and we use a discrete formulation on tetrahedral meshes analogous to [Mullen et al. 2009; Elcott et al. 2007].</DRI_Background> <DRI_Approach ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">Regular voxel meshes are also supported as a special case of this discretization.</DRI_Approach> <DRI_Unspecified agreement="All_Equal">Discrete Basis Fields.</DRI_Unspecified> <DRI_Approach agreement="All_Equal">Through DEC we define the discrete Laplacian operator ∆ = −curl 2 = −d ∗ d∗ which has a representation as a sparse, symmetric matrix.</DRI_Approach> <DRI_Approach agreement="All_Equal">We compute the eigendecomposition of this matrix to produce the discrete velocity and vorticity basis fields.</DRI_Approach> <DRI_Approach agreement="All_Equal">The velocity basis fields satisfy a free slip boundary condition and are divergence free, due to constraints imposed implicitly through the Laplacian operator matrix.</DRI_Approach> <DRI_Approach agreement="All_Equal">For example, to enforce a free-slip velocity boundary condition, we omit (set to zero) the rows of the discrete Laplacian ∆ that calculate velocity flux on boundary faces.</DRI_Approach> <DRI_Approach agreement="All_Equal">Defined as above, ∆ admits only divergence free solutions in its eigendecomposition.</DRI_Approach> <Sentence agreement="All_Equal">Hence the fields produced by the eigensolver satisfy the conditions of Eq.</Sentence> <Sentence agreement="All_Equal">1 in a discrete setting.</Sentence> <DRI_Approach ann2="Sentence" agreement="3diff" ann1="DRI_Approach" ann3="DRI_Unspecified">Examples of basis fields for a tetrahedral mesh are shown in Figure 9 .</DRI_Approach> <DRI_Unspecified agreement="All_Equal">Discrete Advection Operator.</DRI_Unspecified> <DRI_Approach agreement="All_Equal">We also employ DEC to approximate the advection operator Adv(·, ·) using appropriate discretizations.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_Approach">This evaluation is similar to that employed in [Mullen et al. 2009].</DRI_Approach> <DRI_Approach agreement="All_Equal">Other than the discrete representation and computations described above, the rest of our fluid simulation method remains the same.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Unspecified">The operation and performance of the time integration scheme described in Section 5 does not change, since it operates only with the basis coefficients.</DRI_Approach> <DRI_Approach agreement="All_Equal">However, additional expenses in the case of meshed domains include the storage of discrete basis fields, and the reconstruction of the velocity field through summation.</DRI_Approach> <DRI_Outcome ann2="DRI_Approach" agreement="3diff" ann1="DRI_Outcome" ann3="DRI_Unspecified">As we show in Section 9, these costs are reasonable for typical operating parameters, but can become large for simulations employing very fine meshes and large basis dimensionality.</DRI_Outcome>
        ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
        8
       <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="Sentence" ann3="DRI_Unspecified"> </Sentence>•
        Memory Domain Domain Basis Mesh Precomp. <Sentence agreement="All_Equal">C k Type Dim.</Sentence> <Sentence agreement="All_Equal">Ele.</Sentence> <Sentence agreement="All_Equal">(s) (Mb) N T O(N 2 ) O(N 2 ) 3-D Cube 81 3.6 0.05 3-D Cube 172 15 0.3 Closed form 3-D Cube 325 55 1.1 3-D Cube 540 149 3.3 3-D Cube 81 3.6 0.05 3-D Cube 172 15 0.3 Closed form 3-D Cube 325 55 1.1 3-D Cube 540 149 3.3 N T O(T N 2 ) O(N 3 ) Head 64 ≈ 24 3 436 0.9 Tets Head 128 ≈ 24 3 1689 7.2 Armadillo 16 32 3 18 0.01 Armadillo 32 32 3 47 0.1 Voxels Armadillo 64 32 3 185 0.9 Armadillo 128 32 3 1109 7.8 Bunny 32 32 3 79 0.11 Bunny 64 32 3 269 0.95 Voxels Bunny 128 32 3 1305 7.8 Bunny 256 32 3 6911 62.4</Sentence>
        
          Fig. 10. Precomputation time, storage requirements and runtime performance performed on a single CPU core. N is the basis dimensionality and T is the number of mesh elements. † Closed form velocity bases cached on a 32 3 grid. †† Per 1000 closed form evaluations. ††† Buoyancy forces calculated on a 16 3 subsampled grid.
        
      
      
        <h1>9. RESULTS</h1>
        <DRI_Unspecified ann2="DRI_Unspecified" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Unspecified">The storage requirements, precomputation time, and runtime performance of our simulation method for both closed form and meshed domains are presented in Figure 10 .</DRI_Unspecified> <DRI_Approach agreement="All_Equal">All experiments were performed on a single CPU core.</DRI_Approach> <DRI_Approach agreement="All_Equal">Time integration was performed using an explicit fourth order Runge Kutta method.</DRI_Approach> <DRI_Outcome ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome">Closed form domains are limited in their boundaries, but have notable advantages in terms of runtimes, precomputation and memory requirements.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">For examples including external forces (such as buoyancy or moving obstacles), the cost of projecting the forces on to the basis is noted.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">This cost is proportional to the mesh resolution and the number of basis fields.</DRI_Outcome> <DRI_Approach agreement="All_Equal">In the case of the bunny, a subsampled 16 3 density grid is used for the buoyancy force calculations.</DRI_Approach> <DRI_Unspecified agreement="All_Equal">Velocity Reconstruction.</DRI_Unspecified> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">For discrete meshes, velocity field reconstruction requires summation of stored basis fields.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">This is proportional to the mesh resolution and the dimension of the basis.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">On closed form domains, there are two alternatives for velocity reconstruction.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">The basis fields may be pre-evaluated on a mesh and stored, just as in the discrete case.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">Alternatively, they may be computed on demand.</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">Closed form evaluation is proportional to the number of basis functions and the number of advected quantities.</DRI_Approach> <DRI_Outcome ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome">Each alternative has its strengths.</DRI_Outcome> <DRI_Outcome ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome">Caching the basis fields uses memory, but saves computation when many quantities are being advected through the field (density or millions of particles).</DRI_Outcome> <DRI_Outcome ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome">If only a few particles need to be advected (leaves in wind, for example), then evaluating closed form expressions is accurate and fast and does not have additional memory requirements.</DRI_Outcome> <DRI_Unspecified agreement="All_Equal">A column in Table 10 lists the cost of 1000 closed form evaluations.</DRI_Unspecified>
        <DRI_Unspecified ann2="DRI_Unspecified" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="Sentence">Runtime Basis Advection Vel.</DRI_Unspecified> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="Sentence">Reconst Vel.</Sentence> Reconst External Fields † (ms) (cached)† (closed form) Forces ††† (Mb) (ms) (ms) †† (ms)
        O(T N ) ≈ O(N ) O(T N ) O(T N ) O(T N
       <Sentence agreement="All_Equal"> </Sentence>)
        )
        66 18 26 141 37 56 267 70 105 443 125 172 18 30 37 67 n/a 70 126 125 216 O(T N ) O(N 3 ) O(T N ) O(T N 26 20 10 52 42 20 13 3.5 5 22 26 7 10 43 52 15 20 88 105 39 41 172 26 8 10 22 52 17 19 43 105 40 39 90 210 130 87 174
        The supplemental videos demonstrate simulations performed on a variety of domains with varying basis dimensionality. <DRI_Outcome agreement="All_Equal">A comparison to the stable fluids algorithm is included as a rough qualitative validation.</DRI_Outcome> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">We demonstrate flow on some simple tetrahedral meshes; however we chose a structured voxelized grid for the bunny example only to facilitate implementation.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">A robust tetrahedral mesh implementation would have similar performance characteristics and alleviate the boundary “stair case” artifacts.</DRI_Outcome> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">The effects of basis dimensionality are illustrated through the bunny example.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">Modes with small eigenvalue capture the low frequency motion of the fluid.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">Notably, the bunny’s ears do not begin to be resolved until after the 64th mode.</DRI_Outcome> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">In addition to using the bottom of the spectrum to capture the large scale motion, one may choose additional modes from much higher parts of the spectrum to incorporate smaller scales.</DRI_Approach> <DRI_Outcome agreement="All_Equal">This demonstrates the benefit of a basis that exhibits a spectrum of scales.</DRI_Outcome> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Outcome">Note that these high frequency modes interact and decay physically, in contrast to other post-processing turbulence models.</DRI_Outcome>
      
      
        <h1>10. CURRENT LIMITATIONS</h1>
        <DRI_Outcome agreement="All_Equal">Our method is most applicable to gaseous phenomena and situations when the domain is entirely filled by fluid.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">Currently it is not readily adaptable to typical liquid simulations that require a constantly changing fluid domain with a free surface.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">We have shown that interesting dynamics can be captured in a reasonably sized basis dimension and simulated interactively.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">However, various issues prevent it from scaling well to very large basis dimension or grid resolutions.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">For irregular domains, the runtime is in general O(N 3 ).</DRI_Outcome> <Sentence agreement="All_Equal">Large mesh resolutions also require large</Sentence>
        ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
        •
        9
        
          
          Fig. 9.
        
        <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="Sentence">Top-left: An interactive painting application benefits from an accurate viscous fluid simulation that is independent of the density grid.</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="Sentence">Topright: Fluid simulation within a tetrahedral model of a head.</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="Sentence">Bottom-left: A turbulent 3-D flow in a cubic domain.</Sentence> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Unspecified" ann3="Sentence">Bottom-right: Initializing an inviscid simulation with basis functions that are spatially symmetric produces a perpetual symmetric flow.</Sentence>
        <Sentence agreement="All_Equal">precomputation times and storage for the basis fields.</Sentence> <DRI_Outcome agreement="All_Equal">For discrete meshes, the cost of reconstructing the velocity field and projecting external forces grows linearly with the basis dimension and mesh resolution.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">Many of these issues are not present for domains with closed form expressions.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">However, in this case the shape of the boundary is limited.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">Also, when advecting many particles or projecting many forces the velocity basis fields must still be cached as the cost of closed form evaluations become prohibitive.</DRI_Outcome>
      
      
        <h1>11. FUTURE WORK</h1>
        <DRI_Unspecified agreement="All_Equal">Artistic Control.</DRI_Unspecified> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_FutureWork">We believe our method has potential to be exploited for the expressive control of fluid phenomena.</DRI_Outcome> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome_Contribution">We have shown how to continuously change the basis coefficients to simulate the physical motion of a fluid.</DRI_Outcome> <DRI_Outcome agreement="All_Equal">However, any smooth curve through coefficient space, physical or not, may be perceived as “fluid-like” as it represents a continuously changing volume preserving flow that respects all boundary conditions.</DRI_Outcome> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Outcome_Contribution">In addition to constructing completely arbitrary flows, perturbing existing physical paths offers a means to deviate from physics while quantifying this deviation.</DRI_Outcome> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Outcome">Due to orthogonality of the basis and its correspondence with vorticity of varying scales, we have a unique mechanism for spectral energy control.</DRI_Outcome> <DRI_FutureWork ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_FutureWork" ann3="DRI_FutureWork">This could be used to implement timevarying filters to amplify or attenuate parts of the spectrum, such as achieving crescendos of turbulence or gradual calming.</DRI_FutureWork> <DRI_Outcome agreement="All_Equal">Again, we have a means of quantifying the deviation from non-physical energy behavior, as we have shown how to decay the spectrum according to physical viscosity.</DRI_Outcome> <DRI_Background agreement="All_Equal">Space-time control for fluids has been attempted previously in [Treuille et al. 2003; McNamara et al. 2004; Fattal and Lischinski 2004].</DRI_Background> <DRI_Background agreement="All_Equal">Many of these methods can be expensive because the optimization scales sharply with the size of the grid, making them impractical for interesting domains.</DRI_Background> <DRI_Background agreement="All_Equal">A low dimensional basis offers a good setting to implement control policies that would be intractable in higher dimensions as demonstrated for example by Barbi c et al. [Barbi c et al. 2009].</DRI_Background> <DRI_FutureWork ann2="DRI_FutureWork" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_FutureWork">Our method’s availability of closed form expressions for time derivatives could also prove useful in optimization algorithms.</DRI_FutureWork> <DRI_Outcome agreement="All_Equal">Our method is fast enough to be interactive, and is very memory efficient and well formulated on rectangular domains due to the available closed form expressions.</DRI_Outcome> <DRI_FutureWork ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_FutureWork" ann3="DRI_FutureWork">This makes it particularly attractive for use in image based settings such as painting applications that simulate fluid phenomena, as we briefly demonstrate in the video.</DRI_FutureWork> <DRI_FutureWork ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_FutureWork" ann3="DRI_FutureWork">Additional potential uses in this vein include texture synthesis and non-photorealistic rendering.</DRI_FutureWork> <DRI_Unspecified agreement="All_Equal">Improvements to our Method.</DRI_Unspecified> <DRI_FutureWork ann2="DRI_FutureWork" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_FutureWork">Boundaries of moving obstacles are handled only approximately and could benefit from alternate methods.</DRI_FutureWork> <DRI_FutureWork ann2="DRI_FutureWork" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_FutureWork">We have presented a fast and stable integration scheme; however, additional time integrators could be explored, particularly symmetric integrators to allow time reversibility as was achieved in [Mullen et al. 2009].</DRI_FutureWork> <DRI_FutureWork ann2="DRI_FutureWork" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_FutureWork">Time reversibility could prove useful in fluid control applications, as was demonstrated for rigid bodies by Twigg and James [2008].</DRI_FutureWork> <DRI_Outcome ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome" ann3="DRI_Approach">We have evaluated the advection operator symbolically for closed form expressions on rectangular 2-D and 3-D domains.</DRI_Outcome> <DRI_FutureWork agreement="All_Equal">The same could be done for additional geometries, such as a 2-D disk or a spherical surface.</DRI_FutureWork> <DRI_FutureWork agreement="All_Equal">Also, different boundary conditions (for example, a wrap-around boundary condition) remain to be considered, which could prove useful for tilings of fluid simulation domains [Wicke et al. 2009].</DRI_FutureWork> <DRI_Unspecified agreement="All_Equal">Other Applications.</DRI_Unspecified> <DRI_Outcome ann2="DRI_Background" agreement="3diff" ann1="DRI_Outcome" ann3="DRI_FutureWork">Divergence free fields have many potential uses besides simulating natural phenomena.</DRI_Outcome> <DRI_Background ann2="DRI_Background" agreement="2equal_1diff" ann1="DRI_Background" ann3="DRI_FutureWork">Fluid motion describes the optimal transport in an incompressible medium, and can be used to quantify volume preserving deformations.</DRI_Background> <DRI_Outcome ann2="DRI_Background" agreement="3diff" ann1="DRI_Outcome" ann3="DRI_FutureWork">This has uses in image analysis and shape deformation.</DRI_Outcome> <DRI_FutureWork agreement="All_Equal">We plan to consider how the unique properties of our method could be exploited in these fields.</DRI_FutureWork> <DRI_FutureWork agreement="All_Equal">In particular, the elegant formulation on rectangular domains could make it useful for medical image registration.</DRI_FutureWork> <DRI_FutureWork ann2="DRI_Background" agreement="3diff" ann1="DRI_FutureWork" ann3="DRI_Outcome">Additionally, the availability of closed form expressions and flexibility in choosing the basis dimension make it an accurate and tractable model for optimization methods.</DRI_FutureWork> <DRI_FutureWork agreement="All_Equal">This could be useful for the inverse modelling of real fluid flows for the purpose of parameter estimation, for example to estimate viscosity from sampled velocity measurements.</DRI_FutureWork>
      
      
        <h1>12. CONCLUSION</h1>
        <DRI_Outcome_Contribution agreement="All_Equal">We have presented a fluid simulation method that uses eigenfunctions of the vector Laplacian as bases.</DRI_Outcome_Contribution> <DRI_Outcome_Contribution ann2="DRI_Outcome" agreement="2equal_1diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Outcome_Contribution">We have described many of its unique properties and its use as a practical means of fluid simulation for computer graphics.</DRI_Outcome_Contribution> <DRI_Outcome_Contribution ann2="DRI_Approach" agreement="3diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Outcome">The orthogonality of the basis functions and their correspondence to a spectrum of vorticity scales enables energy control at varying turbulent scales.</DRI_Outcome_Contribution> <DRI_Outcome_Contribution ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Outcome_Contribution">We have used this property to enforce stability of integrators and simulate physical viscosity.</DRI_Outcome_Contribution> <DRI_Outcome_Contribution ann2="DRI_Approach" agreement="3diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Outcome">Flexibility in choosing basis dimensionality and the ability to integrate directly in a space of basis coefficients permits computational efficiency, enabling interactive performance.</DRI_Outcome_Contribution> <DRI_Outcome_Contribution ann2="DRI_Approach" agreement="3diff" ann1="DRI_Outcome_Contribution" ann3="DRI_Outcome">The existence of closed form solutions for simple domains allows symbolic evaluation of the advection operator and the ability to sparsely evaluate velocities on demand.</DRI_Outcome_Contribution> <DRI_Outcome agreement="All_Equal">We have demonstrated some of the useful properties of our method, but many exciting avenues remain to be explored.</DRI_Outcome> <DRI_FutureWork agreement="All_Equal">We plan to investigate its use for the the expressive control of fluid motion, such as spectral energy control and space time optimization.</DRI_FutureWork> <DRI_FutureWork agreement="All_Equal">We also believe there is potential for our method to be exploited in other research areas such as medical imaging and inverse flow modelling.</DRI_FutureWork>
        ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
        10
        •
      
      
        <h1>APPENDIX A. EVALUATING ADVECTION IN CLOSED FORM FOR 2-D DOMAIN</h1>
        <Sentence agreement="All_Equal">We evaluate the advection operator for pairs of basis functions defined on a 2-D rectangular domain, defined in Eqs.</Sentence> <Sentence agreement="All_Equal">3 and 2.</Sentence> <DRI_Approach agreement="All_Equal">We evaluate Adv(Φ i , φ j ) = curl (φ j × Φ i ) recalling that i, j are vector wave numbers i = (i 1 , i 2 ), j = (j 1 , j 2 ) and the eigenvalues λ i = −(i 2 1 + i 2 2 ).</DRI_Approach> <DRI_Approach ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Approach">This simplifies to 1 Adv(Φ i , φ j ) = i 1 j 2 cos(i 1 x) cos(j 2 y) sin(j 1 x) sin(i 2 y) λ i 1 − i 2 j 1 cos(j 1 x) cos(i 2 y) sin(i 1 x) sin(j 2 y) a z .</DRI_Approach> <Sentence ann2="Sentence" agreement="2equal_1diff" ann1="DRI_Approach" ann3="Sentence">λ i The trigonometric identity cos(α) sin(β) = 1 sin(α + β) − 2 1 sin(α − β) allows factoring to a suitable expression which is 2 indeed spanned by {φ k }: 1 Adv(Φ i , φ j ) = 4λ i ((i 1 j 2 − i 2 j 1 )φ i 1 +j 1 ,i 2 +j 2 − (i 1 j 2 + i 2 j 1 )φ i 1 +j 1 ,i 2 −j 2 + (i 1 j 2 + i 2 j 1 )φ i 1 −j 1 ,i 2 +j 2 −(i 1 j 2 − i 2 j 1 )φ i 1 −j 1 ,i 2 −j 2 ) .</Sentence> <DRI_Approach agreement="All_Equal">The resulting coefficients are stored in the {C k } matrices 1 C i 1 +j 1 ,i 2 +j 2 [i, j] = − 4(i 1 2 + i 2 2 ) (i 1 j 2 − i 2 j 1 ) 1 C i 1 +j 1 ,i 2 −j 2 [i, j] = 4(i 1 2 + i 2 2 ) (i 1 j 2 + i 2 j 1 ) 1 C i 1 −j 1 ,i 2 +j 2 [i, j] = − 4(i 1 2 + i 2 2 ) (i 1 j 2 + i 2 j 1 ) 1 C i 1 −j 1 ,i 2 −j 2 [i, j] = 4(i 1 2 − i 2 2 ) (i 1 j 2 − i 2 j 1 ).</DRI_Approach> <DRI_Approach ann2="DRI_Approach" agreement="2equal_1diff" ann1="DRI_Approach" ann3="DRI_Outcome">This result demonstrates closure of the advection operator.</DRI_Approach> <DRI_Approach agreement="All_Equal">The indices i, j are meant figuratively, as they represent tuples of integers.</DRI_Approach> <DRI_Approach agreement="All_Equal">A suitable re-mapping from (i 1 , i 2 ) and (j 1 , j 2 ) to positive integers is necessary in an implementation.</DRI_Approach> <DRI_Approach agreement="All_Equal">When outside of the storable finite range, they are discarded as described previously.</DRI_Approach> <DRI_Approach agreement="All_Equal">Note the sums of indices i 1 + j 1 and i 2 + j 2 , which reflect the doubling in bandlimit due to multiplication of sinusoidal functions.</DRI_Approach>
      
      
        <h1>REFERENCES</h1>
        
          A DAMS , B., P AULY , M., K EISER , R., AND G UIBAS , L. J. 2007. Adaptively sampled particle fluids. In ACM SIGGRAPH 2007 papers. SIGGRAPH ’07. ACM, New York, NY, USA.
          A GRACHEV , A. A. AND S ARYCHEV , A. V. 2005. Navier-Stokes Equations: Controllability by Means of Low Modes Forcing. Journal of Mathematical Fluid Mechanics 7, 1 (March), 108–152.
          A NGELIDIS , A., N EYRET , F., S INGH , K., AND N OWROUZEZAHRAI , D. 2006. A controllable, fast and stable basis for vortex based smoke simulation. In Proceedings of the 2006 ACM SIGGRAPH/Eurographics symposium on Computer animation. SCA ’06. Eurographics Association, Airela-Ville, Switzerland, Switzerland, 25–32.
          A RNOLD , V. I. 1966. Sur la géométrie différentielle des groupes de lie de dimension infinie et ses applications à l’hydrodynamique des fluides parfaits. Ann. Inst. Fourier (Grenoble) 16.
          B ARBI C , J., DA S ILVA , M., AND P OPOVI Ć , J. 2009. Deformable object animation using reduced optimal control. In ACM SIGGRAPH 2009 papers. SIGGRAPH ’09. ACM, New York, NY, USA, 53:1–53:9.
          B RIDSON , R., H OURIHAM , J., AND N ORDENSTAM , M. 2007. Curl-noise for procedural fluid flow. In ACM SIGGRAPH 2007 papers. SIGGRAPH ’07. ACM, New York, NY, USA.
          C HENG , D. K. 1999. Field and Wave Electromagnetics. Addison-Wesley, Reading, Mass.
          DE W ITT , T. 2010. Fluid Simulation in Bases of Laplacian Eigenfunctions. M.S. thesis, University of Toronto, Toronto, ON, Canada.
          D ESBRUN , M., K ANSO , E., AND T ONG , Y. 2005. Discrete differential forms for computational modeling. In ACM SIGGRAPH 2005 Courses. SIGGRAPH ’05. ACM, New York, NY, USA.
          D ESBRUN , M. AND PAULE G ASCUEL , M. 1996. Smoothed particles: A new paradigm for animating highly deformable bodies. In In Computer Animation and Simulation 96 (Proceedings of EG Workshop on Animation and Simulation. Springer-Verlag, 61–76.
          E LCOTT , S., T ONG , Y., K ANSO , E., S CHR ODER  ̈ , P., AND D ESBRUN , M. 2007. Stable, circulation-preserving, simplicial fluids. ACM Trans. Graph. 26.
          F ATTAL , R. AND L ISCHINSKI , D. 2004. Target-driven smoke animation. In ACM SIGGRAPH 2004 Papers. SIGGRAPH ’04. ACM, New York, NY, USA, 441–448.
          F EDKIW , R., S TAM , J., AND J ENSEN , H. W. 2001. Visual simulation of smoke. In Proceedings of the 28th annual conference on Computer graphics and interactive techniques. SIGGRAPH ’01. ACM, New York, NY, USA, 15–22.
          F OSTER , N. AND M ETAXAS , D. 1996. Realistic animation of liquids. Graph. Models Image Process. 58, 471–483.
          G AMITO , M. N., L OPES , P. F., AND G OMES , M. R. 1995. Twodimensional simulation of gaseous phenomena using vortex particles. In In Proceedings of the 6th Eurographics Workshop on Computer Animation and Simulation. Springer-Verlag, 3–15.
          G UPTA , M. AND N ARASIMHAN , S. G. 2007. Legendre fluids: a unified framework for analytic reduced space modeling and rendering of participating media. In Proceedings of the 2007 ACM SIGGRAPH/Eurographics symposium on Computer animation. SCA ’07. Eurographics Association, Aire-la-Ville, Switzerland, Switzerland, 17–25.
          G USTAFSON , K. AND H ARTMAN , R. 1983. Divergence-Free Bases for Finite Element Schemes in Hydrodynamics. SIAM Journal on Numerical Analysis 20, 697–721.
          L ENTINE , M., Z HENG , W., AND F EDKIW , R. 2010. A novel algorithm for incompressible flow using only a coarse grid projection. In ACM SIGGRAPH 2010 papers. SIGGRAPH ’10. ACM, New York, NY, USA, 114:1–114:9.
          L OSASSO , F., G IBOU , F., AND F EDKIW , R. 2004. Simulating water and smoke with an octree data structure. In ACM SIGGRAPH 2004 Papers. SIGGRAPH ’04. ACM, New York, NY, USA, 457–462.
          M ARSDEN , J. E. AND R ATIU , T. S. 1999. Introduction to Mechanics and Symmetry, Second ed. Number 17 in Texts in Applied Mathematics. Springer-Verlag New York, New York, NY.
          M C N AMARA , A., T REUILLE , A., P OPOVI Ć , Z., AND S TAM , J. 2004. Fluid control using the adjoint method. In ACM SIGGRAPH 2004 Papers. SIGGRAPH ’04. ACM, New York, NY, USA, 449–456.
          M ULLEN , P., C RANE , K., P AVLOV , D., T ONG , Y., AND D ESBRUN , M. 2009. Energy-preserving integrators for fluid animation. In ACM SIGGRAPH 2009 papers. SIGGRAPH ’09. ACM, New York, NY, USA, 38:1–38:8.
          M ULLER  ̈ , M., C HARYPAR , D., AND G ROSS , M. 2003. Particle-based fluid simulation for interactive applications. In Proceedings of the 2003 ACM SIGGRAPH/Eurographics symposium on Computer animation. SCA ’03. Eurographics Association, Aire-la-Ville, Switzerland, Switzerland, 154– 159.
          O RSZAG , S. A. 1969. Numerical methods for the simulation of turbulence. Phys. Fluids 12, 250–257.
          O RSZAG , S. A. AND P ATTERSON , G. 1972. Numerical simulation of threedimensional homogeneous isotropic turbulence. Phys. Rev. Lett. 28, 76– 79.
          P ARK , S. I. AND K IM , M. J. 2005. Vortex fluid for gaseous phenomena. In Proceedings of the 2005 ACM SIGGRAPH/Eurographics symposium on Computer animation. SCA ’05. ACM, New York, NY, USA, 261–270.
          P OINCAR É , H. 1901. Sur une forme nouvelle des équations de la méchanique. C.R. Acad. Sci. 132, 369–371.
          R OGALLO , R., M OIN , P., AND R EYNOLDS , W. 1981. Numerical experiments in homogeneous turbulence. NASA TM-81315..
          S ELLE , A., F EDKIW , R., K IM , B., L IU , Y., AND R OSSIGNAC , J. 2008. An unconditionally stable MacCormack method. J. Sci. Comput. 35, 350– 371.
          S ILBERMAN , I. 1954. Planetary Waves in the Atmosphere. Journal of Meteorology 11, 27–34.
          S TAM , J. 1999. Stable fluids. In Proceedings of the 26th annual conference on Computer graphics and interactive techniques. SIGGRAPH ’99. ACM Press/Addison-Wesley Publishing Co., New York, NY, USA, 121– 128.
          S TAM , J. 2002. A simple fluid solver based on the FFT. J. Graph. Tools 6, 43–52.
          S TAM , J. AND F IUME , E. 1993. Turbulent wind fields for gaseous phenomena. In Proceedings of the 20th annual conference on Computer graphics and interactive techniques. SIGGRAPH ’93. ACM, New York, NY, USA, 369–376.
          T REUILLE , A., L EWIS , A., AND P OPOVI Ć , Z. 2006. Model reduction for real-time fluids. In ACM SIGGRAPH 2006 Papers. SIGGRAPH ’06. ACM, New York, NY, USA, 826–834.
          T REUILLE , A., M C N AMARA , A., P OPOVI Ć , Z., AND S TAM , J. 2003. Keyframe control of smoke simulations. In ACM SIGGRAPH 2003 Papers. SIGGRAPH ’03. ACM, New York, NY, USA, 716–723.
          T WIGG , C. D. AND J AMES , D. L. 2008. Backward steps in rigid body simulation. In ACM SIGGRAPH 2008 papers. SIGGRAPH ’08. ACM, New York, NY, USA, 25:1–25:10.
          W EISSMANN , S. AND P INKALL , U. 2010. Filament-based smoke with vortex shedding and variational reconnection. In ACM SIGGRAPH 2010 papers. SIGGRAPH ’10. ACM, New York, NY, USA, 115:1–115:12.
          W ICKE , M., S TANTON , M., AND T REUILLE , A. 2009. Modular bases for fluid dynamics. In ACM SIGGRAPH 2009 papers. SIGGRAPH ’09. ACM, New York, NY, USA, 39:1–39:8.
          Y UDOVICH , V. I. 1963. Non-stationary flow of an ideal incompressible liquid. USSR Computational Mathematics and Mathematical Physics 3, 6, 1407 – 1456.
          Z HU , Y. AND B RIDSON , R. 2005. Animating sand as a fluid. In ACM SIGGRAPH 2005 Papers. SIGGRAPH ’05. ACM, New York, NY, USA, 965–972.
          Received July 2011; accepted July 2011
        
        ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
        •
        11
        ACM Transactions on Graphics, Vol. VV, No. N, Article XXX, Publication date: Month YYYY.
      
    
  
</Document>